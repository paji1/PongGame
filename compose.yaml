  services:
    frontend:
      container_name: "ff"
      build:
        context: frontend
        target: development
      networks:
        - client-side
      ports:
        - 3000:3000
      volumes:
        - ./frontend/src:/code/src:ro
      env_file:
        - .env
    backend:
      container_name: "bb"
      build:
        args:
        - NODE_ENV=development
        context: backend
        target: development
      command: "npm run t:d" 
      env_file:
      - .env
      ports:
        - 3001:8001
        - 5555:5555
      volumes:
        - ./backend/src:/code/src:rw
        - back-notused:/code/prisma/migrations
        - back-notused:/opt/app/node_modules
      networks:
        - client-side
        - server-side
      depends_on:
        - db

    db:
      container_name: "dd"
      image: postgres:12-alpine
      restart: always
      env_file:
      - .env
      networks:
        - server-side
      ports:
        - 5432:5432
      volumes:
        - db-data:/var/lib/postgresql/data
    # prisma:
    #   image: prismagraphql/prisma:1.34
    #   restart: always
    #   ports:
    #     - '4466:4466'
    #   networks:
    #     - server-side
    #   environment:
    #     PRISMA_CONFIG: |
    #       port: 4466
    #       databases:
    #         default:
    #           connector: postgres
    #           host: db
    #           port: 5432
    #           user: postgres
    #           password: mysecretpassword
    #   depends_on:
    #     - db
    pgadmin:
      container_name: "pp"
      image: dpage/pgadmin4
      env_file:
      - .env
      ports:
        - 5050:80
      networks:
        - server-side
      depends_on:
        - db
  networks:
    client-side: {}
    server-side: {}

  volumes:
    back-notused:
    db-data: {}
