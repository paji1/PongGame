<--------------------------
http:
    actions:

        rooms specific: 
            - get the user rooms,   GET     /chat/roomsG/userid                                   {user get every conversation he has}
            
            - create room,          POST    /chat/roomsE/roomid=:id&type=type&pass=pass          {chat type room is created by default and the default type is owner}
            - delete a room         DELETE  /chat/roomsE/roomid=:id                              {owner only, if room is type chat , it delete the conversation only}
            - change room name,     UPDATE  /chat/roomsE/roomid:id                               {user is admin in room or owner}
            - change room type      
            
            - join a room           POST    /chat/roomsJ/action=join&room_id=:id&password=pass   {only for protected and public, password is checked for PRIVATE type}
            - roles   
            - block                 
             - remove a person       UPDATE  /chat/rooms/action=invite&roomid=:id                 {user is admin in room or owner}
        
        chat specific:
            - get converasion       GET     /chat/rooms/room_id=:id                              {user must be in room}
            - mute a person,        UPDATE  /chat/rooms/action=mute&user_id=:id                  {user must be admin or owner}
            - send message,         POST    /chat/rooms/action=message&roomid=:id                {in room, not muted or blocked}

-------------------------->

<--------------------------

websockets:

-------------------------->






<---------->
other info:
        how private should work:
            - invite a person       POST    /chat/rooms/action=invite&roomid=:id                {private rooms only, admin or owner required}
            the admin or the owner request from the backend a referal link
            the link is as the format URL/referals/refer?{random string}
            the random string is represented in the database as {thestring, action, name or game parametres} 
            actions:{
                invite,
                play
            }
<---------->
    
    
    
    
    
    
    

    
        
hooks:
    create_room
    delete_room
    
   
    
    join_room
    leave_room
    
    get_messages
    send_message
    
    
    block_user
    unblock_user
    
    mute_user
    unmute_user

    get_rooms

